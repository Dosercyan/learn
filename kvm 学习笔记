kvm 学习笔记

以intel的cpu为例：
1、打开cpu控制寄存器cr4的虚拟化模式开关，执行vmxon指令将宿主操作系统置于虚拟化模式的根模式
2、创建／dev/kvm设备文件，并等待来自用户空间的命令
3、虚拟机的创建和运行时用户空间程序（qemu）和 kvm模块相互配合的过程 （一系列的ioctl）


［构建kvm环境］：
1、在bios下打开intel vt (inter virtualization technology)
2、如果芯片支持vt-d，在bios下将其打开（virtualization technology for directed I/O）
上面打开是否成功可以在／proc/cpuinfo中查看是否有vmx(intel)或svm(AMD)的标志
grep -E 'vmx' /proc/cpuinfo

3、安装发行版操作系统（我们是ubuntu）

4、编译和安装kvm
linux 4.4.0内核把kvm编译成了模块,下面这一段是kvm相关的配置
CONFIG_MODULE_SIG_KEY="certs/signing_key.pem"
CONFIG_SYSTEM_TRUSTED_KEYRING=y
CONFIG_SYSTEM_TRUSTED_KEYS=""
CONFIG_HAVE_KVM=y
CONFIG_HAVE_KVM_IRQCHIP=y
CONFIG_HAVE_KVM_IRQFD=y
CONFIG_HAVE_KVM_IRQ_ROUTING=y
CONFIG_HAVE_KVM_EVENTFD=y
CONFIG_KVM_APIC_ARCHITECTURE=y
CONFIG_KVM_MMIO=y
CONFIG_KVM_ASYNC_PF=y
CONFIG_HAVE_KVM_MSI=y
CONFIG_HAVE_KVM_CPU_RELAX_INTERCEPT=y
CONFIG_KVM_VFIO=y
CONFIG_KVM_GENERIC_DIRTYLOG_READ_PROTECT=y
CONFIG_KVM_COMPAT=y
CONFIG_HAVE_KVM_IRQ_BYPASS=y
CONFIG_VIRTUALIZATION=y
CONFIG_KVM=m
CONFIG_KVM_INTEL=m
CONFIG_KVM_AMD=m    ／／这个其实可以关闭，但是编成了模块，也无所谓
CONFIG_KVM_MMU_AUDIT=y
CONFIG_KVM_DEVICE_ASSIGNMENT=y
CONFIG_BINARY_PRINTF=y

就按照正常的skylake编译方式，然后insmod kvm.ko和kvm_intel.ko就可以了。insmod完成后查看/dev/kvm是否存在

5、编译和安装qemu-kvm (qemu-kvm是专门针对kvm做了修改和优化的qemu分支)
(1)qemu的源码，可以尝试用oa里面ubuntu资源的deb文件直接安装，也可以使用源码编译的方式
qemu-kvm开发代码仓库的网页链接为：http://git.kernel.org/cgit/virt/kvm/qemu-kvm.git/
git clone http://git.kernel.org/cgit/virt/kvm/qemu-kvm.git/

（2）编译：
./configure
make
注：编译生成的qemu-system-x86_64文件就是我们之后常用的qemu-kvm的命令工具

(3)安装：
make install
会生成qemu-system-x86_64、qemu-ima这样的命令行工具

6、安装客户机（即我们要安装的windows程序）
通过命令的方式创建：见《kvm虚拟化技术实战与原理解析》 41页
6.1 启动客户机  见 42页

［KVM核心基础功能］
［kvm高级功能］
［kvm管理工具］
1、libvirt
2、virsh
3、virt-manager
4、virt-viewer
5、virt-install
6、virt-top

［ubuntu中的kvm］详情见342页
kvm相关的软件包：
1、qemu-kvm 提供了kvm必须的用户空间管理工具
2、libvirt-bin 提供了libvirt api 和 virus管理工具
3、bridge-untils提供了管理网桥的brctl工具
4、ubuntu-vm-builder提供了一个ubuntu优化过的构建客户及的强大的命令行工具
5、virt-manager提供了图形界面下管理kvm的工具
6、virtinst提供了命令后下安装客户机的工具（virt-install）